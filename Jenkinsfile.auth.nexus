pipeline {
    agent any
    
    parameters {
        string(name: 'TAG', defaultValue: 'latest', description: 'Tag (e.g. 1.0.0) for build and deploy')
    }
    
    environment {
        SERVICE_DIR = 'auth'
        GITHUB_REPO = 'https://github.com/tepbuphatakim/msit-devops-cluster.git'
        NEXUS_URL = 'localhost:8082'
        NEXUS_URL_PRIVATE = '172.31.85.200:8082'
        NEXUS_REPOSITORY = 'docker-hosted' // You will create this repository in Nexus
        IMAGE_NAME = 'msit-devops-cluster-auth'
        NEXUS_CREDENTIALS_ID = 'nexus-credentials' // You will create this in Jenkins
        GITHUB_TOKEN_ID = 'github-token' // GitHub Personal Access Token credentials
    }

    stages {
        stage('Checkout') {
            steps {
                cleanWs()
                withCredentials([string(credentialsId: GITHUB_TOKEN_ID, variable: 'GITHUB_TOKEN')]) {
                    checkout([
                        $class: 'GitSCM',
                        branches: [[name: '*/main']],
                        userRemoteConfigs: [[
                            url: "https://oauth2:\${GITHUB_TOKEN}@github.com/tepbuphatakim/msit-devops-cluster.git"
                        ]]
                    ])
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                dir("${SERVICE_DIR}") {
                    script {
                        sh "docker build -t ${NEXUS_URL}/${NEXUS_REPOSITORY}/${IMAGE_NAME}:${params.TAG} ."
                    }
                }
            }
        }

        stage('Push to Nexus Registry') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: NEXUS_CREDENTIALS_ID,
                    usernameVariable: 'NEXUS_USER',
                    passwordVariable: 'NEXUS_PASSWORD'
                )]) {
                    script {
                        sh "echo \${NEXUS_PASSWORD} | docker login ${NEXUS_URL} -u \${NEXUS_USER} --password-stdin"
                        
                        sh "docker push ${NEXUS_URL}/${NEXUS_REPOSITORY}/${IMAGE_NAME}:${params.TAG}"
                    }
                }
            }
        }

        stage('Update Docker Compose') {
            steps {
                withCredentials([string(credentialsId: GITHUB_TOKEN_ID, variable: 'GITHUB_TOKEN')]) {
                    script {
                        sh """
                            git config user.email "jenkins@example.com"
                            git config user.name "Jenkins"
                            
                            # Update docker-compose.yml with new image tag
                            sed -i "s|image: ${NEXUS_URL_PRIVATE}/${NEXUS_REPOSITORY}/${IMAGE_NAME}:.*|image: ${NEXUS_URL_PRIVATE}/${NEXUS_REPOSITORY}/${IMAGE_NAME}:${params.TAG}|" docker-compose.app.nexus.yml
                            
                            git remote set-url origin https://oauth2:\${GITHUB_TOKEN}@github.com/tepbuphatakim/msit-devops-cluster.git
                            
                            git add docker-compose.app.nexus.yml
                            git commit -m "Update ${SERVICE_DIR} service image to version ${params.TAG}"
                            git push origin HEAD:main
                        """
                    }
                }
            }
        }
    }

    post {
        always {
            sh "docker logout ${NEXUS_URL} || true"
            cleanWs()
        }
        success {
            echo "Successfully built and pushed ${NEXUS_URL}/${NEXUS_REPOSITORY}/${IMAGE_NAME}:${params.TAG}"
        }
        failure {
            echo "Failed to build or push ${NEXUS_URL}/${NEXUS_REPOSITORY}/${IMAGE_NAME}:${params.TAG}"
        }
    }
}
